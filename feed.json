{
    "version": "https://jsonfeed.org/version/1",
    "title": "Built by AAAA",
    "description": "",
    "home_page_url": "https://alafariabdullah.sa",
    "feed_url": "https://alafariabdullah.sa/feed.json",
    "user_comment": "",
    "author": {
        "name": "Abdullah Ameen A. Alafari"
    },
    "items": [
        {
            "id": "https://alafariabdullah.sa/rm-rf/how-to-set-up-a-time-based-simple-automation-triggercondition/",
            "url": "https://alafariabdullah.sa/rm-rf/how-to-set-up-a-time-based-simple-automation-triggercondition/",
            "title": "How to set up a time based simple automation trigger/condition",
            "summary": "Introduction This tutorial will guide you through creating a time-based automation using Home Assistant’s built-in “Helpers.” You’ll modify the Jinja2 script to suit your own&hellip;",
            "content_html": "<h2 id=\"introduction\">Introduction</h2>\n<p>This tutorial will guide you through creating a time-based automation using Home Assistant’s built-in “Helpers.” </p><ul>\n<li>In this tutorial, you’ll learn how to:<ul>\n<li>Create a Helper to store the date and time.</li>\n<li>Use Jinja2 and simple YAML to create automation triggers.</li>\n<li>Apply this automation to various use cases, such as:<ul>\n<li>Sending a notification to your phone after a certain number of days, like when you haven’t done the laundry.</li>\n<li>Triggering a charger on your Plugged-in HA Dashboard every set number of hours.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>You’ll modify the Jinja2 script to suit your own setup, and the “Helpers” will allow you to easily store and update the base time for automation triggers/condition.</p><h2 id=\"table-of-contents\">Table of Contents</h2>\n<ul>\n<li><a href=\"#prerequisites\">Prerequisites</a></li>\n<li><a href=\"#step-1--making-a-helper\">Step 1 : Making a Helper</a></li>\n<li><a href=\"#step-2--making-the-automation-triggercondition\">Step 2 : Making the Automation trigger/condition</a></li>\n<li><a href=\"#updating-the-helper\">Updating the Helper</a></li>\n<li><a href=\"#example-use-\">Example Use</a></li>\n</ul>\n<h2 id=\"prerequisites\">Prerequisites</h2>\n<ul>\n<li>A working <a href=\"https://www.home-assistant.io/\">Home Assistant</a> installation (any of the following setups will work: HA OS, Docker, Supervised, or HA Core).</li>\n</ul>\n<h2 id=\"step-1--making-a-helper\">Step 1 : Making a Helper</h2>\n<p>Creating a Helper to store the time you want to start counting from is the simplest way to easily update it (if needed) via a button or another method.</p><ul>\n<li>Go to <strong>Settings</strong> at the bottom left &gt; <strong>Devices and Services</strong> &gt; <strong>Helpers</strong>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"Media/image-1.png\" alt=\"alt text\" data-is-external-image=\"true\"></figure>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"Media/image-3.png\" alt=\"alt text\" data-is-external-image=\"true\"></figure></li>\n<li>Create a <strong>New Helper</strong></li>\n<li><strong>Data and/or Time</strong>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"Media/image-5.png\" alt=\"alt text\" data-is-external-image=\"true\"></figure></li>\n<li>Give your new Helper a name and choose “Date and Time”</li>\n<li>Click <strong>Create</strong> to create the new helper\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"Media/image-6.png\" alt=\"alt text\" data-is-external-image=\"true\"></figure></li>\n<li>Note : To get the entity ID of your new Helper, click on the three dots at the right and then <strong>Show Settings</strong> Entity ID will be as follows (input_datetime.{HELPERNAME})\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"Media/image-7.png\" alt=\"alt text\" data-is-external-image=\"true\"></figure>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"Media/image-8.png\" alt=\"alt text\" data-is-external-image=\"true\"></figure></li>\n</ul>\n<h2 id=\"step-2--making-the-automation-triggercondition\">Step 2 : Making the Automation trigger/condition</h2>\n<p>We will use the Helper as a baseline to calculate the time that has passed after the {Helper}.\nThe basic code you’ll need to insert is :</p><ul>\n<li>Use one of these, depending on whether you’re using it as the main trigger (e.g., “When X time passes, do Y”) or as a condition (e.g., “If I press a button, check if Y time has passed”).</li>\n</ul>\n<pre><code class=\"language-YAML\">- condition: template\n    value_template: &gt;-\n      {{ (now().timestamp() -\n      (state_attr(&#39;{The Entity ID of your helper}&#39;, &#39;timestamp&#39;)\n      or 0)) &gt; {Time in seconds} }}\n</code></pre>\n<pre><code class=\"language-YAML\">- trigger: template\n    value_template: &gt;-\n      {{ (now().timestamp() -\n      (state_attr(&#39;{The Entity ID of your helper}&#39;, &#39;timestamp&#39;)\n      or 0)) &gt; {Time in seconds} }}\n</code></pre>\n<ul>\n<li><p><strong>{The Entity ID of your Helper}</strong> : Find this in <a href=\"#step-1--making-a-helper\">Step 1 - Note </a></p></li>\n<li><p><strong>{Time in seconds}</strong>: </p><ul>\n<li>1 hour = 3600</li>\n<li>3 days = 259200</li>\n<li>1 week = 604800</li>\n<li>1 year = 31,536,000</li>\n</ul>\n</li>\n<li><p>Next, go to <strong>Settings</strong> &gt; <strong>Automations &amp; Scenes</strong> &gt; <strong>Automation</strong> \n<figure class=\"post__image\"><img loading=\"lazy\" src=\"Media/image-1.png\" alt=\"alt text\" data-is-external-image=\"true\"></figure></p></li>\n<li><p>Create a new automation and click the three dots at the top, then choose <strong>Edit in YAML</strong>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"Media/image-9.png\" alt=\"alt text\" data-is-external-image=\"true\"></figure></p></li>\n<li><p>You should see something similar to this</p></li>\n</ul>\n<pre><code class=\"language-yaml\">alias: {Your Title}\ndescription: &quot;{}&quot;\ntriggers:\nconditions:\nactions:\n</code></pre>\n<ul>\n<li>Copy either the trigger or the condition (from earlier) and paste it into the appropriate block. It should look like this, depending on whether you choose Triggers or Conditions: :</li>\n</ul>\n<pre><code class=\"language-yaml\">alias: {Your Title}\ndescription: &quot;{}&quot;\ntriggers:\n- trigger: template\n    value_template: &gt;-\n      {{ (now().timestamp() -\n      (state_attr(&#39;{The Entity ID of your helper}&#39;, &#39;timestamp&#39;)\n      or 0)) &gt; {Time in seconds} }}\nconditions:\nactions:\n</code></pre>\n<h2 id=\"updating-the-helper\">Updating the Helper</h2>\n<p>Updating the Helper is simple. You can do this by sending the following action through a script, button, or any other method :</p><pre><code class=\"language-YAML\">  - action: input_datetime.set_datetime\n    metadata: {}\n    data:\n      datetime: &quot;{{ now().strftime(&#39;%Y-%m-%d %H:%M:%S&#39;) }}&quot;\n    target:\n      entity_id: input_datetime.colored_last_laundry_day\n</code></pre>\n<h2 id=\"example-use-\">Example Use :</h2>\n<p>I use this condition to receive a notification when 3 days have passed since the last time I did the laundry. The notification updates depending on how many days have passed (for example, if it’s 5 years later, the notification will reflect that).\nThe automation consists of :</p><ul>\n<li>A <strong>Date and Time Helper</strong>\n-** A Script** to update the Date and Time Helper</li>\n<li>An <strong>Automation</strong></li>\n</ul>\n<p>Helper : Date and time\nScript : </p><pre><code class=\"language-YAML\">sequence:\n  - action: input_datetime.set_datetime\n    metadata: {}\n    data:\n      datetime: &quot;{{ now().strftime(&#39;%Y-%m-%d %H:%M:%S&#39;) }}&quot;\n    target:\n      entity_id: input_datetime.inbetween_last_laundry_day\nalias: update_inbetween_last_laundry_day\ndescription: &quot;&quot;\n</code></pre>\n<p>Automation : </p><pre><code class=\"language-YAML\">alias: Laundry Reminder After 3 Days or more\ndescription: &quot;&quot;\ntriggers:\n  - trigger: template\n    value_template: &gt;-\n      {{ (now().timestamp() -\n      (state_attr(&#39;input_datetime.input_datetime_last_laundry_day&#39;, &#39;timestamp&#39;)\n      or 0)) &gt; 259200 }}\nconditions:\n  - condition: template\n    value_template: &gt;-\n      {{ (now().timestamp() -\n      (state_attr(&#39;input_datetime.input_datetime_last_laundry_day&#39;, &#39;timestamp&#39;)\n      or 0)) &gt; 259200 }}\nactions:\n  - action: notify.mobile_app_abdullahs_iphone\n    data:\n      message: &gt;-\n        It&#39;s been {{ ((now().timestamp() - \n        (state_attr(&#39;input_datetime.input_datetime_last_laundry_day&#39;,\n        &#39;timestamp&#39;)  or 0)) // 86400) | int }} days since your last laundry.\n      title: Do the Laundry!\n</code></pre>\n<h2 id=\"\">—</h2>\n<p>This tutorial was created in my free time as a fun project. I am a Computer Science freshman at Prince Sultan University (PSU). If you’re interested, feel free to connect with me on <a href=\"www.linkedin.com/in/alafari-abdullah\">Linkedin</a></p>",
            "author": {
                "name": "Abdullah Ameen A. Alafari"
            },
            "tags": [
                   "self-hosting",
                   "home-assistant",
                   "automation",
                   "Guide"
            ],
            "date_published": "2025-08-01T05:40:22+03:00",
            "date_modified": "2025-08-01T05:42:30+03:00"
        },
        {
            "id": "https://alafariabdullah.sa/rm-rf/qbittorrent-docker-torrents-stuck-in-errored-state/",
            "url": "https://alafariabdullah.sa/rm-rf/qbittorrent-docker-torrents-stuck-in-errored-state/",
            "title": "qBittorrent Docker — Torrents Stuck in &quot;Errored&quot; State",
            "summary": "While self-hosting qBittorrent in Docker on my NAS, I ran into an issue where every torrent I added ended up stuck in an Errored state&hellip;",
            "content_html": "<p>While self-hosting qBittorrent in Docker on my NAS, I ran into an issue where every torrent I added ended up stuck in an <code>Errored</code> state with 0% progress and no tracker activity.</p><hr>\n<h2 id=\"the-problem\">The Problem</h2>\n<p>Even though:</p><ul>\n<li>The Web UI loaded fine via Tailscale</li>\n<li>I could see a healthy number of peers (e.g., 45)</li>\n<li>DHT, PeX, and LSD all showed as “Working”</li>\n<li>DNS and internet were reachable from the container</li>\n</ul>\n<p>No torrent ever started downloading. The status just stayed like this:</p><pre><code>Status: Errored\nProgress: 0.0%\nTrackers: Not contacted yet\n</code></pre>\n<hr>\n<h2 id=\"what-i-tried-first\">What I Tried First</h2>\n<p>I wanted to make sure this wasn’t a DNS or network issue. Since I recently added Pi-hole to my network, I checked whether DNS worked correctly using:</p><pre><code class=\"language-bash\">nslookup google.com 192.168.1.1\n</code></pre>\n<p>Worked perfectly.</p><p>Then I tested network access from inside the container:</p><pre><code class=\"language-bash\">sudo docker exec -it qbittorrent ping google.com\n</code></pre>\n<p>Also successful — packets were getting through. So the network and DNS were clearly not the issue.</p><hr>\n<h2 id=\"finding-the-real-cause\">Finding the Real Cause</h2>\n<p>After ruling out network issues, I started suspecting a file system permission problem.</p><p>I checked what the container sees for its <code>/downloads</code> folder:</p><pre><code class=\"language-bash\">sudo docker exec -it qbittorrent ls -ld /downloads\n</code></pre>\n<p>Here’s what I got:</p><pre><code>d--------- 1 abc abc ... /downloads\n</code></pre>\n<p>This told me that although the directory existed, it had no permissions — not even read or execute. The qBittorrent container had no access to the path it was supposed to write downloaded files to.</p><p>The kicker? On the host, the folder looked completely fine:</p><pre><code class=\"language-bash\">ls -ld &quot;/volume2/Media Server/qbittorrentDownloads&quot;\ndrwxrwxrwx+ 1 Admin1 users ...\n</code></pre>\n<p>But Docker’s user mapping didn’t translate that correctly inside the container.</p><hr>\n<h2 id=\"how-i-fixed-it\">How I Fixed It</h2>\n<p>On the NAS host, I updated the ownership and permissions of the downloads directory so that the user inside the container (mapped by PUID 1026 and PGID 100) could actually use it:</p><pre><code class=\"language-bash\">sudo chown -R 1026:100 &quot;/volume2/Media Server/qbittorrentDownloads&quot;\nsudo chmod -R 775 &quot;/volume2/Media Server/qbittorrentDownloads&quot;\n</code></pre>\n<p>Check <a href=\"https://docs.linuxserver.io/general/understanding-puid-and-pgid/\">LinuxServer.io</a> and <a href=\"https://www.digitalocean.com/community/tutorials/how-to-set-permissions-linux\">DigitalOcean</a> for further details regarding <code>PUID</code>, <code>PGID</code>, <code>chown</code>, and <code>chmod</code>.</p><p>Then restarted the container:</p><pre><code class=\"language-bash\">sudo docker restart qbittorrent\n</code></pre>\n<hr>\n<h2 id=\"what-happened-after\">What Happened After</h2>\n<p>As soon as the container restarted, the torrents that were stuck in “Errored” started working immediately.</p><pre><code>Status: Downloading\n</code></pre>\n<p>Trackers connected. DHT found peers. Files started downloading as expected.</p><hr>\n<h2 id=\"final-thoughts\">Final Thoughts</h2>\n<p>If you’re running into similar symptoms—torrents stuck at 0% with no real activity, and everything else looks fine—don’t just trust the host’s folder permissions. Check what the container actually sees.</p><p>Look <em>inside</em> the container for permission issues, especially when using bind mounts with Docker and mapped users like <code>PUID</code>/<code>PGID</code>.</p><p>Sometimes the issue isn’t with the internet, tracker, or torrent file at all — it’s simply that qBittorrent lacks write access to the disk.</p><h2 id=\"🖤-credits\">🖤 Credits</h2>\n<p>Written by <a href=\"https://github.com/AlafariAbdullah\">Abdullah Alafari</a></p><p>Connect with me on <a href=\"www.linkedin.com/in/alafari-abdullah\">Linkedin</a></p>",
            "author": {
                "name": "Abdullah Ameen A. Alafari"
            },
            "tags": [
                   "self-hosting",
                   "docker",
                   "Troubleshooting",
                   "Linux"
            ],
            "date_published": "2025-06-04T04:50:00+03:00",
            "date_modified": "2025-08-01T05:31:25+03:00"
        },
        {
            "id": "https://alafariabdullah.sa/rm-rf/reboot-from-linux-into-any-other-os-dual-boot-via-ssh/",
            "url": "https://alafariabdullah.sa/rm-rf/reboot-from-linux-into-any-other-os-dual-boot-via-ssh/",
            "title": " 🔁 Reboot from Linux into any other OS (Dual Boot) via SSH",
            "summary": "This guide shows how to remotely reboot into Any Grub Boot Menu option while remoting into linux on a dual-boot system. ✅ For example: when&hellip;",
            "content_html": "<p>This guide shows how to <strong>remotely reboot into Any Grub Boot Menu option while remoting into linux</strong> on a dual-boot system.</p><blockquote>\n<p>✅ For example: when you’re SSH’d into a Linux system (e.g., Linux Mint) and want the <strong>next boot to go to Windows</strong> without physically interacting with the machine.</p></blockquote>\n<hr>\n<h2 id=\"📋-prerequisites\">📋 Prerequisites</h2>\n<ul>\n<li>Dual boot setup with Linux (e.g., Mint) and another OS</li>\n<li>GRUB bootloader and boot menu</li>\n<li>SSH access to the Linux system</li>\n</ul>\n<hr>\n<p>For full details, Check <a href=\"https://www.gnu.org/software/grub/grub-documentation.html\">Grub’s Official Documentation</a></p><h2 id=\"🧾-step-by-step\">🧾 Step-by-Step</h2>\n<p>For this example, I assume you want to boot into your windows for simplicity</p><h3 id=\"1-🔍-find-the-windows-grub-entry\">1. 🔍 Find the Windows GRUB entry</h3>\n<p>What we’re doing is basically filtering through <code>/boot/grub/grub.cfg</code> to get the lines we want, there’re many ways to do so but the simplest is just to run this command:</p><pre><code class=\"language-bash\">awk -F\\&#39; &#39;/menuentry / {print i++ &quot;: &quot; $2}&#39; /boot/grub/grub.cfg\n</code></pre>\n<p>The output will look something like this: </p><pre><code>0: Linux Mint 22 Cinnamon\n1: Linux Mint 22 Cinnamon, with Linux 6.8.0-40-generic\n2: Linux Mint 22 Cinnamon, with Linux 6.8.0-40-generic (recovery mode)\n3: Linux Mint 22 Cinnamon, with Linux 6.8.0-39-generic\n4: Linux Mint 22 Cinnamon, with Linux 6.8.0-39-generic (recovery mode)\n5: Linux Mint 22 Cinnamon, with Linux 6.8.0-38-generic\n6: Linux Mint 22 Cinnamon, with Linux 6.8.0-38-generic (recovery mode)\n7: Windows Boot Manager (on /dev/nvme0n1p1)\n8: UEFI Firmware Settings\n</code></pre>\n<p>Copy the name <strong>exactly</strong>, without the index:\n<code>Windows Boot Manager (on /dev/nvme0n1p1)</code></p><p>Or, if for any reason you didn’t find the Windows entry, run this command:</p><pre><code class=\"language-bash\">sudo grep -i menuentry /boot/grub/grub.cfg\n</code></pre>\n<p>And look for:</p><pre><code>menuentry &#39;Windows Boot Manager (on /dev/nvme0n1p1)&#39; --class windows --class os ...\n</code></pre>\n<p>The name is in quotes.</p><hr>\n<h3 id=\"2-🚀-reboot-into-windows-once\">2. 🚀 Reboot into Windows (once)</h3>\n<p>Now that you have your menu entry, just use <code>grub-reboot</code> with it:</p><pre><code class=\"language-bash\">sudo grub-reboot &quot;Windows Boot Manager (on /dev/nvme0n1p1)&quot;\nsudo reboot\n</code></pre>\n<p>The name in <code>&quot;&quot;</code> should be <strong>exact</strong>.</p><p>For this example, the system will reboot <strong>into Windows one time</strong>, then revert to the default OS (Linux for me).</p><hr>\n<h3 id=\"3-optional-🔁-make-windows-the-default\">3. (Optional) 🔁 Make Windows the default</h3>\n<p>To boot into Windows <strong>every time by default</strong>:</p><pre><code class=\"language-bash\">sudo grub-set-default &quot;Windows Boot Manager (on /dev/nvme0n1p1)&quot;\nsudo update-grub\n</code></pre>\n<p>You can undo this later with:</p><pre><code class=\"language-bash\">sudo grub-set-default 0  # Assuming Linux is first entry, index works as the image shows\nsudo update-grub\n</code></pre>\n<hr>\n<h3 id=\"4-extra\">4. Extra:</h3>\n<p>You’d use the index instead of the name to reboot into the OS once:</p><pre><code class=\"language-bash\">sudo grub-reboot 2\nsudo reboot\n</code></pre>\n<hr>\n<h2 id=\"🧠-notes\">🧠 Notes</h2>\n<ul>\n<li>This uses GRUB’s <strong>temporary boot override</strong> via <code>grub-reboot</code></li>\n<li>You need <code>sudo</code> privileges to run it</li>\n</ul>\n<hr>\n<h2 id=\"🧵-related-grub-commands\">🧵 Related GRUB Commands</h2>\n<ul>\n<li><code>grub-reboot</code> – Set next boot only</li>\n<li><code>grub-set-default</code> – Change default permanently</li>\n<li><code>update-grub</code> – Regenerates GRUB menu</li>\n</ul>\n<hr>\n<h2 id=\"future\">Future:</h2>\n<ul>\n<li>Make it a simple script so you’d remotely run to avoid the manual process</li>\n</ul>\n<hr>\n<h2 id=\"🖤-credits\">🖤 Credits</h2>\n<p>Written by <a href=\"https://github.com/AlafariAbdullah\">Abdullah Alafari</a>, tested on Linux Mint 22 Cinnamon with GRUB2.</p><p>Connect with me on <a href=\"www.linkedin.com/in/alafari-abdullah\">Linkedin</a></p>",
            "image": "https://alafariabdullah.sa/media/posts/4/Grub-Menu-Dual-Boot.jpeg",
            "author": {
                "name": "Abdullah Ameen A. Alafari"
            },
            "tags": [
                   "remote",
                   "grub",
                   "Linux",
                   "Guide"
            ],
            "date_published": "2025-04-24T03:59:00+03:00",
            "date_modified": "2025-08-01T05:30:22+03:00"
        },
        {
            "id": "https://alafariabdullah.sa/rm-rf/auto-sync-minecraft-savesworlds-with-git/",
            "url": "https://alafariabdullah.sa/rm-rf/auto-sync-minecraft-savesworlds-with-git/",
            "title": "🧠 Auto-Sync Minecraft Saves(Worlds) with Git",
            "summary": "I often play Minecraft on my desktop at home, but when I’m on the go with my laptop, transferring my save manually used to be&hellip;",
            "content_html": "<p>I often play Minecraft on my desktop at home, but when I’m on the go with my laptop, transferring my save manually used to be a hassle. I had to remote into my desktop, zip the save folder, spin up a Python HTTPS server, and download it from my laptop. That got old quickly.</p><p>So, I spent two quick hours writing a pair of simple scripts — one for Windows, one for macOS — to automatically run <code>git pull</code> before launching Minecraft, and <code>git push</code> after exiting the game. Now my Minecraft save syncs seamlessly between devices using GitHub.</p><ul>\n<li>I assume you’d just use your .minecraft as your repo to sync your settings, mods and all other game related files (including saves), but I am not entirely sure if there’d be compatibility issues or not.</li>\n</ul>\n<h2 id=\"⚙️-how-it-works\">⚙️ How It Works</h2>\n<ol>\n<li>Your Minecraft save is stored in a <a href=\"https://docs.github.com/en/migrations/importing-source-code/using-the-command-line-to-import-source-code/adding-locally-hosted-code-to-github\">local Git repository</a>.</li>\n<li>When you launch Minecraft:<ul>\n<li>The script pulls the latest version of the save from GitHub.</li>\n</ul>\n</li>\n<li>When you exit Minecraft:<ul>\n<li>The script automatically commits your changes and pushes them to GitHub.</li>\n</ul>\n</li>\n</ol>\n<p>No more zipping, no more remote desktop. Just pure automation.</p><h2 id=\"️replace-any-path-with-your-own-path️\"><em>‼️Replace any path with your own path‼️</em></h2>\n<h2 id=\"the-logic-is-basically-if-a-process-called-java-was-started-and-closed-while-the-script-is-running-check-for-changes-in-the-world-files-and-push-them----i-decided-to-use-the-java-process-instead-of-minecraft-version-to-check-if-the-game-is-open-or-not-since-i-dont-use-java-for-other-purposes-if-you-use-java-replace-the-process-name-with-process-name-of-your-respective-version-or-youd-try-to-search-for-a-process-with-a-prefix-minecraft-but-execlude-the-launcher-the-base-for-the-loop-is-to-determine-if-the-user-opened-the-game-past-the-launcher-or-just-opened-it-and-closed-it\">The logic is basically “If a process called Java was started and closed while the script is running, check for changes in the world files and push them”\n - I decided to use the java process (instead of “Minecraft {version}”) to check if the game is open or not since i don’t use java for other purposes. If you use java, replace the process name with process name of your respective version, or you’d try to search for a process with a prefix “Minecraft” but execlude the Launcher, the base for the loop is to determine if the user opened the game (past the launcher) or just opened it and closed it </h2>\n<h2 id=\"🪟-windows-script-minecraft_launcherbat\">🪟 Windows Script (<code>minecraft_launcher.bat</code>)</h2>\n<pre><code class=\"language-bat\">@echo off\ncd &quot;&quot;C:\\Users\\abdul\\AppData\\Roaming\\.minecraft\\saves\\SAVE_Name&quot;&quot;\n: Save Repo Path &quot;Drive:\\{User}\\AppData\\Roamin\\.minecraft\\saves\\NAME&quot;\n\necho Pulling latest changes...\ngit pull\n\necho Launching Minecraft...\nstart &quot;&quot; /WAIT &quot;&quot;&quot;C:\\Program Files (x86)\\Minecraft Launcher\\MinecraftLauncher.exe&quot;&quot;&quot;\n: Minecraft Launcher Path\n\necho.\necho Waiting for game process to fully close...\n: checkloop\ntasklist | findstr /I java.exe &gt;nul\nif %errorlevel%==0 (\n    echo 🟢 Still running...\n    timeout /t 5 &gt;nul\n    goto checkloop\n)\necho 🔴 Minecraft has closed.\n\necho Backing up your save to GitHub...\n\ngit add .\n: Check if there are any changes staged\ngit diff --cached --quiet\nif %errorlevel%==0 (\n    echo 🟡 No changes to commit.\n) else (\n    git commit -m &quot;Auto backup via Windows&quot;\n    git push\n    echo ✅ Backup pushed to GitHub!\n)\n\npause\n</code></pre>\n<p>✅ Replace {User} and <NAME> with your actual info\n✅ Replace the path to MinecraftLauncher.exe if it’s different\nNote: I added prompts since i didn’t find a one click way to make a .bat run in the background without showing a CMD window. But I assume there’s a way to do so.\n⸻</p><h2 id=\"🍎-macos-script-minecraft_launchersh\">🍎 macOS Script (minecraft_launcher.sh)</h2>\n<pre><code>#!/bin/bash\n\n# Navigate to the gitrepo (the save folder)\ncd &quot;/Users/Abdullah/Library/Application Support/minecraft/saves/SAVE_Name&quot;\n# Save Repo Path &quot;/Users/{User}/Library/Application Support/minecraft/saves/NAME&quot;\n\n# Pull latest version from github\ngit pull\n\n# Open Minecraft\nopen &quot;/Applications/Minecraft.app&quot;\n# Path to your Minecraft.app\n\n# Wait until Minecraft is actually running (java process appears -not launcher-)\nuntil pgrep -x &quot;java&quot; &gt; /dev/null; do\n    sleep 2\ndone\n\n\n\n# Wait until Minecraft fully closes (java process ends)\nwhile pgrep -x &quot;java&quot; &gt; /dev/null; do\n    sleep 5\ndone\n\n# Minecraft has closed\n\n# Perform Git backup only after Minecraft was opened and closed\ngit add .\nif git diff --cached --quiet; then\n    echo &quot;No changes.&quot;\nelse\n    git commit -m &quot;Auto backup via MacOS&quot;\n    git push\nfi\n\n</code></pre>\n<p>✅ Make it executable with <code>chmod +x minecraft_launcher.sh</code> (Via MacOS terminal)\n✅ You can launch it from Automator (if you want it to appear in Spotlight Search)</p><p>⸻</p><h2 id=\"📝-tips\">📝 Tips</h2>\n<ul>\n<li>Make sure both devices use the same branch and repo.</li>\n<li>Always exit Minecraft before switching devices.</li>\n<li>Git handles the history — you just focus on playing </li>\n<li>You’d add a custom icon to each and replace your actual game launcher shortcut with the scripts</li>\n</ul>\n<p>⸻</p><p>Feel free to fork, improve, or reach out if you have suggestions!\nCheck out my <a href=\"https://sa.linkedin.com/in/alafari-abdullah\">Linkedin</a></p><p>⸻</p>",
            "author": {
                "name": "Abdullah Ameen A. Alafari"
            },
            "tags": [
                   "shell-scripting",
                   "minecraft",
                   "git",
                   "Guide"
            ],
            "date_published": "2025-04-10T05:33:00+03:00",
            "date_modified": "2025-08-01T05:33:49+03:00"
        }
    ]
}
